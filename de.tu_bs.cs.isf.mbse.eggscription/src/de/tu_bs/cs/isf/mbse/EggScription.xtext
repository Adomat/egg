// automatically generated by Xtext
grammar de.tu_bs.cs.isf.mbse.egg.EggScription with org.eclipse.xtext.common.Terminals

import "platform:/resource/de.tu_bs.cs.isf.mbse.egg/models/descriptions.ecore#//gui" as gui
import "platform:/resource/de.tu_bs.cs.isf.mbse.egg/models/descriptions.ecore#//attributes" as attributes
import "platform:/resource/de.tu_bs.cs.isf.mbse.egg/models/descriptions.ecore#//attributes/block" as block
import "platform:/resource/de.tu_bs.cs.isf.mbse.egg/models/descriptions.ecore#//attributes/item" as item
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "platform:/resource/de.tu_bs.cs.isf.mbse.egg/models/descriptions.ecore#//auxiliary" as auxiliary
import "platform:/resource/de.tu_bs.cs.isf.mbse.egg/models/descriptions.ecore" as descriptions
import "platform:/resource/de.tu_bs.cs.isf.mbse.egg/models/descriptions.ecore#//gameelements" as gameelements

DescriptionRoot returns descriptions::DescriptionRoot:
	{descriptions::DescriptionRoot}
	(descriptions+=Description)*
;

Description returns descriptions::Description:
	MenuPageDescription 
	//| TextPageDescription 
	| BlockDescription 
	| ItemDescription 
	| HeroDescription | EnemyDescription
;

////## GUI #################################################################
MenuPageDescription returns gui::MenuPageDescription:
	{gui::MenuPageDescription}
	'MenuPageDescription'
	name=EString
	'{'
		
	'}'
;

//TextPageDescription returns gui::TextPageDescription:
//	{gui::TextPageDescription}
//	'TextPageDescription'
//	name=EString
//	'{'
//		'nextPage ' (nextPage = )
//	'}'
//;

////## GAME ELEMENTS #######################################################
BlockDescription returns gameelements::BlockDescription:
	{gameelements::BlockDescription}
	'Block'
	name=EString
	'{'
		(property += BlockAttribute ';')*
	'}'
;

BlockAttribute returns block::BlockAttribute:
	Destroyable | Movable | NoCollision | StaticAnimation
;

Destroyable returns block::Destroyable:
	{block::Destroyable}
	(value ?= 'destroyable')
;

NoCollision returns block::NoCollision:
	{block::NoCollision}
	(value ?= 'noCollision')
;

Movable returns block::Movable:
	{block::Movable}
	(value ?= 'movable')
;

StaticAnimation returns attributes::StaticAnimation:
	{attributes::StaticAnimation}
	(animation = AnimationDescription)?
;

ItemDescription returns gameelements::ItemDescription:
	{gameelements::ItemDescription}
	'Item'
	name=EString
	'{'
		(property += ItemAttribute ';')*
	'}'
;

ItemAttribute returns item::ItemAttribute:
	Consumable | Usable | ScorePoints
;

Consumable returns item::Consumable:
	{item::Consumable}
	(value ?= 'consumable')
;

Usable returns item::Usable:
	{item::Usable}
	(value ?= 'usable')
;

ScorePoints returns item::ScorePoints:
	{item::ScorePoints}
	('scorePoints' value = INT)
;

HeroDescription returns gameelements::HeroDescription:
	{gameelements::HeroDescription}
	'Hero'
	name=EString
	'{'
		
	'}'
;

EnemyDescription returns gameelements::EnemyDescription:
	{gameelements::EnemyDescription}
	'Enemy'
	name=EString
	'{'
		
	'}'
;

////## AUXILIARY ###########################################################
AnimationDescription returns auxiliary::AnimationDescription:
	{auxiliary::AnimationDescription}
	'Animation'
	'{'
		('duration' duration = INT ';')?
		'pictures' pictures+=PICTURESTRING (','pictures+=PICTURESTRING)* ';'
	'}'
;

EString returns ecore::EString:
	STRING | ID;
   
//terminal FLOAT returns ecore::EFloat:
//	INT '.' INT;
//

terminal PICTURESTRING returns ecore::EString:
	'<'(.)+('.jpg'|'.JPG'|'.JPEG'|'.png'|'.PNG')'>'
;

//enum IQ returns auxiliary::IntelligenceLevel:
//	HIGH = 'high' | MEDIUM = 'medium' | LOW = 'low'
//;
